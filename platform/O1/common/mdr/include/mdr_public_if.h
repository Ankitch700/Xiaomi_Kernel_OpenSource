/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2023-2023 XRing Technologies Co., Ltd.
 * Mdr public enums for UEFI and Kernel
 */

#ifndef __MDR_PUBLIC_IF_H__
#define __MDR_PUBLIC_IF_H__

#include "mdr_subtype_exception.h"

#define RST_FLAG_MASK			(0xFF)

#define PMU_RESET_REG_MASK		0xFFFFFF00
#define PMIC_REBOOT_REASON_ADDR		0x1501
#define PMIC_REBOOT_SUBREASON_ADDR	0x1502
#define PMIC_BOOTUP_KEYPOINT_ADDR	0x1503

#define XRLOG_PATH_ROOT		"/data/vendor/xring_logs/"
#define MAX_XRLOG_SIZE		(500 * 1024 * 1024) //500M

#define MDR_LOG_SIZE		256
#define MDR_DUMP_NODE		"mdrdump"

#define ATF_MDR_MAGIC 0xaabbccdd

#define KDUMP_RESERVE_DISK_SIZE	12

struct atf_mdr_ras_info {
	unsigned long long node_id;
	unsigned long long err_status;
	unsigned long long addr;
	unsigned long long misc0;
	unsigned long long misc1;
};

#define ATF_MDR_ARGS_MAX     8

struct atf_mdr_info {
	int e_modid;
	int arg_num;
	unsigned long long args[ATF_MDR_ARGS_MAX];
};

enum boot_stage_point
{
	STAGE_START = 1,
	STAGE_XLOADER_PMIC_INIT_OK = 2,
	STAGE_XLOADER_STORAGE_INIT_OK = 4,
	STAGE_XLOADER_DDR_INIT_OK = 5,
	STAGE_XLOADER_LOAD_BL2_OK = 15,
	STAGE_XLOADER_LOAD_FASTBOOT_START = 16,
	STAGE_XLOADER_LOAD_FASTBOOT_END = 17,
	STAGE_XLOADER_LOAD_XCTRL_CPU_OK = 18,
	STAGE_XLOADER_LOAD_XCTRL_DDR_OK = 19,
	STAGE_XLOADER_LOAD_LPCTRL_OK = 20,
	STAGE_XLOADER_BOOT_XCTRL_CPU = 21,
	STAGE_XLOADER_END = 22,
	STAGE_XCTRL_CPU_BOOT_ACPU = 23,
	STAGE_BL2_BOOT_UEFI = 24,
	STAGE_FASTBOOT_START = 25,
	STAGE_FASTBOOT_WDT_INIT_OK = 26,
	STAGE_FASTBOOT_STORAGE_INIT_START = 27,
	STAGE_FASTBOOT_STORAGE_INIT_FAIL = 28,
	STAGE_FASTBOOT_STORAGE_INIT_OK = 29,
	STAGE_FASTBOOT_DISPLAY_INIT_START = 31,
	STAGE_FASTBOOT_LD_OTHER_IMGS_START = 32,
	STAGE_FASTBOOT_LOADLPMCU_FAIL = 33,
	STAGE_FASTBOOT_LD_KERNEL_IMG_START = 34,
	STAGE_FASTBOOT_END = 70,
	STAGE_KERNEL_STAGE_ONE_START = 110,
	STAGE_KERNEL_WDT_INIT_OK = 111,
	STAGE_KERNEL_STAGE_TWO_START = 115,
	STAGE_ANDROID_ZYGOTE_START = 150,
	STAGE_ANDROID_BOOT_SUCCESS = 250,
	STAGE_BOOTUP_END = STAGE_ANDROID_BOOT_SUCCESS,
	STAGE_END = 255,
};

enum sr_keypoint {
	SR_KEYPOINT_DEFAULT = 0x0,
	SR_KEYPOINT_POWERKEY_PRESS = 0x1,
	SR_KEYPOINT_SUSPEND_START = 0x2,
	SR_KEYPOINT_SUSPEND_PREPARE = 0x3,
	SR_KEYPOINT_SUSPEND = 0x4,
	SR_KEYPOINT_SUSPEND_LATE = 0x5,
	SR_KEYPOINT_SUSPEND_NOIRQ = 0x6,
	SR_KEYPOINT_RESUME_NOIRQ = 0x7,
	SR_KEYPOINT_RESUME_EARLY = 0x8,
	SR_KEYPOINT_RESUME = 0x9,
	SR_KEYPOINT_RESUME_COMPLETE = 0xA,
	SR_KEYPOINT_RESUME_END = 0xB,
	SR_KEYPOINT_DPU_ON = 0x10,
	SR_KEYPOINT_DPU_OFF = 0x11,
	SR_KEYPOINT_DPU_BACKLIGHT_0 = 0x100,
	SR_KEYPOINT_DPU_BACKLIGHT_1000 = 0x101,
	SR_KEYPOINT_DPU_BACKLIGHT_2000 = 0x102,
	SR_KEYPOINT_DPU_BACKLIGHT_3000 = 0x103,
	SR_KEYPOINT_DPU_BACKLIGHT_4000 = 0x104,
};

enum dfx_switch_actrl_reg {
	BIT_SPIDEN = 0,
	BIT_SYS_RESET = 1,
	BIT_LPCTRL_WDT_ENABLE = 2,
	BIT_XRSE_WDT_ENABLE = 3,
	BIT_AP_BOOT_WDT_ENABLE = 4,
	BIT_XCTRL_CPU_WDT_ENABLE = 5,
	BIT_XCTRL_DDR_WDT_ENABLE = 6,
	BIT_PERI_WDT2 = 7,
	BIT_DUMP_PROCESS = 8,
	REG_BIT_MAX = 16
};

enum dfx_switch_name {
	SWITCH_NV_ENABLED = 0,
	SWITCH_EXCEPTION_LOOP = 1,
	SWITCH_KDUMP = 2,
	SWITCH_WDT_ALL_DISABLE = 3,
	SWITCH_LPCTRL_WDT = 4,
	SWITCH_XRSE_WDT = 5,
	SWITCH_AP_BOOT_WDT = 6,
	SWITCH_XCTRL_CPU_WDT = 7,
	SWITCH_XCTRL_DDR_WDT = 8,
	SWITCH_SHUB_WDT = 9,
	SWITCH_AP_WDT = 10,
	SWITCH_SPIDEN = 11,
	SWITCH_HMDR = 12,
	SWITCH_SYS_RESET = 13,
	SWITCH_EXCEPTION_FASTBOOT = 14,
	SWITCH_ASYNC_UART_CONSOLE = 15,
	SWITCH_NPU_WDT = 16,
	SWITCH_NPU_DSP_WDT = 17,
	SWITCH_ISP_WDT = 18,
	SWITCH_AUDIO_WDT = 19,
	SWITCH_PERI_WDT1 = 20,
	SWITCH_PERI_WDT2 = 21,
	SWITCH_PERI_WDT3 = 22,
	SWITCH_LMS_WDT = 23,
	SWITCH_HOOK_DEFAULT = 24,
	SWITCH_HOOK_OTHER = 25,
	SWITCH_FASTBOOTLOG_PRINT = 26,
	SWITCH_SOCSUBSYS_RESET = 27,
	SWITCH_MODEM_RESET = 28,
	SWITCH_WCN_RESET = 29,
	SWITCH_KASLR = 30,
	SWITCH_PMIC_OCP_SYS_RESET = 31,
	SWITCH_UEFI_EXCEPTION_LOOP = 32,
	SWITCH_MAX
};

typedef enum {
	AP_S_COLDBOOT = 0x0,
	bootloader,
	recovery,
	FASTBOOT_REBOOT,
	ADB_REBOOT,
	REBOOT_REASON_LABEL1 = 0x40,
	AP_S_TSENSOR = REBOOT_REASON_LABEL1,
	AP_S_AWDT,
	LPIS_DS_DIS_TO,
	LPPLL_EN_TO,
	PWR_SQC_TO_UL2L,
	NPU_DSP_WD,
	NPU_M85_WD,
	ISP_WD,
	AUDIO_WD,
	PERI_WD3,
	PERI_WD2,
	PERI_WD1,
	LMS_WD,
	XRSE_WD,
	XCTRL_DDR_WD,
	XCTRL_CPU_WD,
	SENSORHUB_WD,
	LPCORE_WDT_RESET,
	XR_AP_PMU,
	AP_HW_WDT,
	XR_MULTI_HARDFAULT,
	REBOOT_REASON_LABEL2 = 0x60,
	XR_AP_PANIC = REBOOT_REASON_LABEL2,
	XR_AP_NOC,
	XR_AP_BL31_PANIC,
	XR_AP_RAS,
	XR_AP_COMBINATIONKEY,
	BORINGSSL_FAILED,
	APEXD_FAILED,
	BOOTSTRAP_APEXD_FAILED,
	VOLD_FAILED,
	LPCTRL_EXCEPTION,
	XCTRL_DDR_EXCEPTION,
	XCTRL_CPU_EXCEPTION,
	TEEOS_EXCEPTION,
	DM_VERITY_FAILED,
	REBOOT_REASON_LABEL3 = 0x80,
	CP_S_MODEM = REBOOT_REASON_LABEL3,
	AUDIO_S_EXCEPTION,
	ISP_S_EXCEPTION,
	NPU_S_EXCEPTION,
	GPU_S_EXCEPTION,
	DPU_S_EXCEPTION,
	VPU_S_EXCEPTION,
	VDSP_S_EXCEPTION,
	SHUB_S_EXCEPTION,
	XRSE_EXCEPTION,
	WCN_S_EXCEPTION,
	REBOOT_REASON_LABEL4 = 0xa0,
	XLOADER_S_WATCHDOG = REBOOT_REASON_LABEL4,
	XLOADER_DDR_LT_FULLBOOT,
	XLOADER_DIY_FREQ_FAILED,
	XLOADER_S_PANIC,
	UEFI_S_WATCHDOG,
	UEFI_VERIFY_FAIL,
	UEFI_FLASHIMG_FAIL,
	UEFI_S_PANIC,
	UEFI_AVS_PANIC,
	UEFI_OSLOADER_FAIL,
	XRSE_BOOT_EXCEPTION,
	XCTRL_CPU_BOOT_EXCEPTION,
	XCTRL_DDR_BOOT_EXCEPTION,
	ATF_BL2_BOOT_EXCEPTION,
	ATF_BL2_RUNTIME_EXCEPTION,
	ATF_BL31_BOOT_EXCEPTION,
	ATF_BL31_RUNTIME_EXCEPTION,
	MITEE_BOOT_EXCEPTION,
	REBOOT_REASON_LABEL5 = 0xd0,
} EXCH_SOURCE;

enum MODID_LIST {
	MDR_MOD_AP_START = 0x80000000,
	MDR_MOD_AP_END = 0x81fff0ff,
	MDR_MOD_FASTBOOT_START = 0x81fff200,
	MDR_MOD_FASTBOOT_END = 0x81fffcff,
	MDR_MOD_ISP_START = 0x81fffd00,
	MDR_MOD_ISP_END = 0x81fffeff,
	MDR_MOD_UFS_START = 0x81ffff00,
	MDR_MOD_UFS_END = 0x81ffffff,
	MDR_MOD_CP_START = 0x82000000,
	MDR_MOD_CP_END = 0x82ffffff,
	MDR_MOD_TEE_START = 0x83000000,
	MDR_MOD_TEE_END = 0x83ffffff,
	MDR_MOD_AUDIO_START = 0x84000000,
	MDR_MOD_AUDIO_END = 0x84ffffff,
	MDR_MOD_LPM3_START = 0x85000000,
	MDR_MOD_LPM3_END = 0x85ffffff,
	MDR_MOD_IOM_START = 0x86000000,
	MDR_MOD_IOM_END = 0x86ffffff,
	MDR_MOD_MISEE_START = 0x87000000,
	MDR_MOD_MISEE_END = 0x87ffffff,
	MDR_MOD_GPU_START = 0x88000000,
	MDR_MOD_GPU_END = 0x880000ff,
	MDR_MOD_SHUB_START = 0x89000000,
	MDR_MOD_SHUB_END = 0x890000ff,
	MDR_MOD_NPU_START = 0xc0000000,
	MDR_MOD_NPU_END = 0xc0000fff,
	MDR_MOD_VDSP_START = 0xc0001000,
	MDR_MOD_VDSP_END = 0xc00010ff,
	MDR_MOD_XRSE_START = 0xc0001100,
	MDR_MOD_XRSE_END = 0xc00011ff,
	MDR_MOD_DPU_START = 0xc0002000,
	MDR_MOD_DPU_END = 0xc00020ff,
	MDR_MOD_VPU_START = 0xc1000000,
	MDR_MOD_VPU_END = 0xc10000ff,
	MDR_MOD_WCN_START = 0xc1000100,
	MDR_MOD_WCN_END = 0xc10001ff,
};

typedef enum {
	MODID_AP_START                = MDR_MOD_AP_START,
	MODID_XR_AP_PANIC             = 0x80000001,
	MODID_XR_AP_MPMIC_OTMP_ALARM  = 0x80000002,
	MODID_XR_AP_MPMIC_OCP_LDOADC  = 0x80000004,
	MODID_XR_AP_MPMIC_OCP_LDOCOUL = 0x80000005,
	MODID_XR_AP_MPMIC_OCP_LDOPMU  = 0x80000006,
	MODID_XR_AP_MPMIC_OCP_ULLDO5  = 0x80000007,
	MODID_XR_AP_MPMIC_OCP_LLDO5   = 0x80000008,
	MODID_XR_AP_MPMIC_OCP_MLDO4   = 0x80000009,
	MODID_XR_AP_MPMIC_OCP_MLDO5   = 0x8000000a,
	MODID_XR_AP_MPMIC_OCP_MLDO6   = 0x8000000b,
	MODID_XR_AP_MPMIC_OCP_MLDO7   = 0x8000000c,
	MODID_XR_AP_MPMIC_OCP_MLDO8   = 0x8000000d,
	MODID_XR_AP_MPMIC_OCP_HLDO5   = 0x8000000e,
	MODID_XR_AP_MPMIC_OCP_HLDO6   = 0x8000000f,
	MODID_XR_AP_MPMIC_OCP_HLDO7   = 0x80000010,
	MODID_XR_AP_MPMIC_OCP_HLDO8   = 0x80000011,
	MODID_XR_AP_MPMIC_OCP_HLDO9   = 0x80000012,
	MODID_XR_AP_MPMIC_OCP_HLDO10  = 0x80000013,
	MODID_XR_AP_COMBINATIONKEY    = 0x80000014,
	MODID_ATF_BL31_RUNTIME_PANIC  = 0x80000015,
	MODID_XR_AP_RAS_CORRECTED     = 0x80000016,
	MODID_XR_AP_RAS_UNCORRECTED   = 0x80000017,
	MODID_ATF_XSPM_RUNTIME_PANIC  = 0x80000018,
	MODID_ATF_XSP_RUNTIME_PANIC   = 0x80000019,
	MODID_XR_AP_XHEE_PANIC        = 0x8000001a,
	MODID_MODEM_PANIC             = 0x8000001b,
	MODID_XR_AP_NOC               = 0x8000001c,
	MODID_XR_AP_MPMIC_OCP_ULLDO1  = 0x8000001d,
	MODID_XR_AP_MPMIC_OCP_ULLDO2  = 0x8000001e,
	MODID_XR_AP_MPMIC_OCP_LLDO3   = 0x8000001f,
	MODID_XR_AP_MPMIC_OCP_LLDO4   = 0x80000020,
	MODID_XR_AP_MPMIC_OCP_MLDO1   = 0x80000021,
	MODID_XR_AP_MPMIC_OCP_MLDO2   = 0x80000022,
	MODID_XR_AP_MPMIC_OCP_HLDO2   = 0x80000023,
	MODID_XR_AP_MPMIC_OCP_HLDO3   = 0x80000024,
	MODID_AP_END                  = MDR_MOD_AP_END
} modid_ap;

typedef enum {
	MODID_XR_UEFI_START		= MDR_MOD_FASTBOOT_START,
	MODID_XR_UEFI_PANIC		= 0x81fff201,
	MODID_XR_UEFI_WDT		= 0x81fff202,
	MODID_XR_UEFI_VERIFY_FAIL	= 0x81fff203,
	MODID_XR_UEFI_FLASHIMG_FAIL	= 0x81fff204,
	MODID_XR_UEFI_AVS_PANIC		= 0x81fff205,
	MODID_XR_UEFI_OSLOADER_FAIL	= 0x81fff206,
	MODID_XR_UEFI_END		= MDR_MOD_FASTBOOT_END
} modid_uefi;

typedef enum {
	MODID_NPU_START					= MDR_MOD_NPU_START,
	MODID_NPU_WDT0_EXCEPTION		= 0xc0000001,
	MODID_NPU_LOCKUP_EXCEPTION		= 0xc0000002,
	MODID_NPU_SYSRST_EXCEPTION		= 0xc0000003,
	MODID_NPU_END					= MDR_MOD_NPU_END
} modid_npu;

typedef enum {
	MODID_VDSP_START				= MDR_MOD_VDSP_START,
	MODID_VDSP_WDT1_EXCEPTION		= 0xc0001001,
	MODID_VDSP_GPIO_NS_EXCEPTION	= 0xc0001002,
	MODID_VDSP_END					= MDR_MOD_NPU_END
} modid_vdsp;

typedef enum {
	MODID_GPU_START               = MDR_MOD_GPU_START,
	MODID_GPU_IRQ_FAULT           = 0x88000001,
	MODID_GPU_BUS_FAULT           = 0x88000002,
	MODID_GPU_FAULT               = 0x88000003,
	MODID_GPU_CS_FAULT            = 0x88000004,
	MODID_GPU_UNHANDLE_PAGE_FAULT = 0x88000005,
	MODID_MCU_UNHANDLE_PAGE_FAULT = 0x88000006,
	MODID_GPU_SOFT_RESET_TIME_OUT = 0x88000007,
	MODID_GPU_HARD_RESET_TIME_OUT = 0x88000008,
	MODID_GPU_BIT_STUCK           = 0x88000009,
	MODID_GPU_REGULATOR_ON_FAIL   = 0x8800000a,
	MODID_GPU_REGULATOR_OFF_FAIL  = 0x8800000b,
	MODID_GPU_FENCE_TIMEOUT       = 0x8800000c,
	MODID_GPU_INTERRUPT_TIMEOUT   = 0x8800000d,
	MODID_GPU_CS_FATAL            = 0x8800000e,
	MODID_GPU_END                 = MDR_MOD_GPU_END
} modid_gpu;

typedef enum {
	MODID_ISP_START                        = MDR_MOD_ISP_START,
	MODID_ISP_FW_PANIC                       = 0x81fffd01,
	MODID_ISP_FW_WDT_HANG                    = 0x81fffd02,
	MODID_ISP_FW_TIMER_HANG                  = 0x81fffd03,
	MODID_ISP_MIPI_TIMEOUT_ERROR             = 0x81fffd04,
	MODID_ISP_MIPI_RX_ERROR                  = 0x81fffd05,
	MODID_ISP_MIPI_HSRX_TO_ERROR             = 0x81fffd06,
	MODID_ISP_MIPI_DESKEW_ERROR              = 0x81fffd07,
	MODID_ISP_MIPI_PHY01_ERROR               = 0x81fffd08,
	MODID_ISP_MIPI_PHY02_ERROR               = 0x81fffd09,
	MODID_ISP_MIPI_CSI2_ERROR                = 0x81fffd0a,
	MODID_ISP_MIPI_FRAME_ERROR               = 0x81fffd0b,
	MODID_ISP_MIPI_LINE_ERROR                = 0x81fffd0c,
	MODID_ISP_MIPI_SDI_HD_FIFO_ERROR         = 0x81fffd0d,
	MODID_ISP_MIPI_SDI_PLD_FIFO_ERROR        = 0x81fffd0e,
	MODID_ISP_MIPI_SDI_WC_ERROR              = 0x81fffd0f,
	MODID_ISP_MIPI_BUS_ERROR                 = 0x81fffd10,
	MODID_ISP_MIPI_AXI_ERROR                 = 0x81fffd11,
	MODID_ISP_MIPI_WR_ERROR                  = 0x81fffd12,
	MODID_ISP_MIPI_SDI_BUF_ERROR             = 0x81fffd13,
	MODID_ISP_FE_ROUTER_SDI0_VBUS_ERROR      = 0x81fffd14,
	MODID_ISP_FE_ROUTER_SDI1_VBUS_ERROR      = 0x81fffd15,
	MODID_ISP_FE_ROUTER_SDI2_VBUS_ERROR      = 0x81fffd16,
	MODID_ISP_FE_ROUTER_SDI0_BUF_FULL        = 0x81fffd17,
	MODID_ISP_FE_ROUTER_SDI1_BUF_FULL        = 0x81fffd18,
	MODID_ISP_FE_ROUTER_SDI2_BUF_FULL        = 0x81fffd19,
	MODID_ISP_FE_ROUTER_DATA_DMA_READ        = 0x81fffd1a,
	MODID_ISP_FE_ROUTER_DATA_DMA_WRITE       = 0x81fffd1b,
	MODID_ISP_FE0_CMD_DMA_ERROR              = 0x81fffd1c,
	MODID_ISP_FE0_DATA_DMA_WRITE_ERROR       = 0x81fffd1d,
	MODID_ISP_FE0_IP_ERROR                   = 0x81fffd1e,
	MODID_ISP_FE1_CMD_DMA_ERROR              = 0x81fffd1f,
	MODID_ISP_FE1_DATA_DMA_WRITE_ERROR       = 0x81fffd20,
	MODID_ISP_FE1_IP_ERROR                   = 0x81fffd21,
	MODID_ISP_FE2_CMD_DMA_ERROR              = 0x81fffd22,
	MODID_ISP_FE2_DATA_DMA_WRITE_ERROR       = 0x81fffd23,
	MODID_ISP_FE2_IP_ERROR                   = 0x81fffd24,
	MODID_ISP_BE_DATA_DMA_READ_ERROR         = 0x81fffd25,
	MODID_ISP_BE_DATA_DMA_WRITE_ERROR        = 0x81fffd26,
	MODID_ISP_BE_CMD_DMA_ERROR               = 0x81fffd27,
	MODID_ISP_CVE_IP_ERROR                   = 0x81fffd28,
	MODID_ISP_CVE_DATA_DMA_READ_ERROR        = 0x81fffd29,
	MODID_ISP_CVE_DATA_DMA_WRITE_ERROR       = 0x81fffd2a,
	MODID_ISP_CVE_ALGIN_MFNR_ERROR           = 0x81fffd2b,
	MODID_ISP_CVE_ALGIN1_CMD_DMA_ERROR       = 0x81fffd2c,
	MODID_ISP_CVE_MFNR_CMD_DMA_ERROR         = 0x81fffd2d,
	MODID_ISP_PE_DATA_DMA_READ_ERROR         = 0x81fffd2e,
	MODID_ISP_PE_DATA_DMA_WRITE_ERROR        = 0x81fffd2f,
	MODID_ISP_PE_CMD_DMA_ERROR               = 0x81fffd30,
	MODID_ISP_PE_WARPEIS_SYS_ERROR           = 0x81fffd31,
	MODID_ISP_PE_WAPRTNR_SYS_ERROR           = 0x81fffd32,
	MODID_ISP_I2C_ERROR                      = 0x81fffd33,
	MODID_ISP_I3C_ERROR                      = 0x81fffd34,
	MODID_ISP_OIS_CAM_PROBE_ERROR            = 0x81fffd35,
	MODID_ISP_OIS_CAM_INIT_ERROR             = 0x81fffd36,
	MODID_ISP_CIS_CAM_PROBE_ERROR            = 0x81fffd37,
	MODID_ISP_EEPROM_CAM_PROBE_ERROR         = 0x81fffd38,
	MODID_ISP_END                          = MDR_MOD_ISP_END
} modid_isp;

typedef enum {
	MODID_SHUB_EXCEPTION_START = MDR_MOD_SHUB_START,
	MODID_SHUB_WDT             = 0x89000001,
	MODID_SHUB_HARDFAULT       = 0x89000002,
	MODID_SHUB_MEMFAULT        = 0x89000003,
	MODID_SHUB_BUSFAULT        = 0x89000004,
	MODID_SHUB_USGFAULT        = 0x89000005,
	MODID_SHUB_LOCKUP          = 0x89000006,
	MODID_SHUB_USER_TRIGGER    = 0x89000007,
	MODID_SHUB_SPI_DMAC_ERR    = 0x89000008,
	MODID_SHUB_DMA_ERR         = 0x89000009,
	MODID_SHUB_IPC_TIMEOUT     = 0x8900000A,
	MODID_SHUB_EXCEPTION_END  = MDR_MOD_SHUB_END
} modid_sensorhub;

typedef enum {
	MODID_XRSE_START          = MDR_MOD_XRSE_START,
	MODID_XRSE_SYS_PANIC      = 0xc0001101,
	MODID_XRSE_MODULE_ERR     = 0xc0001102,
	MODID_XRSE_WDT_TIMEOUT    = 0xc0001103,
	MODID_XRSE_MCU_LOCKUP     = 0xc0001104,
	MODID_XRSE_SENSOR_ERR     = 0xc0001105,
	MODID_XRSE_SHIELD_ERR     = 0xc0001106,
	MODID_XRSE_NOC_ERR        = 0xc0001107,
	MODID_XRSE_END            = MDR_MOD_XRSE_END
} modid_xrse;

typedef enum {
	MODID_DPU_START                   = MDR_MOD_DPU_START,
	MODID_DPU_SW_CLEAR_FAULT          = 0xc0002001,
	MODID_DPU_DSI_CRI_BUSY_FAULT      = 0xc0002002,
	MODID_DPU_MISS_TE_FAULT           = 0xc0002003,
	MODID_DPU_ESD_FAULT               = 0xc0002004,
	MODID_DPU_WAIT_FENCE_TMO_FAULT    = 0xc0002005,
	MODID_DPU_CREATE_FENCE_FAULT      = 0xc0002006,
	MODID_DPU_IRQ_SCHE_TMO_FAULT      = 0xc0002007,
	MODID_DPU_DP_UNDERFLOW_FAULT      = 0xc0002008,
	MODID_DPU_END                     = MDR_MOD_DPU_END
} modid_dpu;

typedef enum {
	MODID_VPU_START                          = MDR_MOD_VPU_START,
	MODID_VPU_ENC_WDT_EXCEPTION              = 0xc1000001,
	MODID_VPU_ENC_NOC_EXCEPTION              = 0xc1000002,
	MODID_VPU_ENC_HANG_EXCEPTION             = 0xc1000003,
	MODID_VPU_ENC_EXTERNAL_TIMEOUT_EXCEPTION = 0xc1000004,
	MODID_VPU_DEC_WDT_EXCEPTION              = 0xc1000005,
	MODID_VPU_DEC_NOC_EXCEPTION              = 0xc1000006,
	MODID_VPU_DEC_HANG_EXCEPTION             = 0xc1000007,
	MODID_VPU_DEC_EXTERNAL_TIMEOUT_EXCEPTION = 0xc1000008,
	MODID_VPU_END                            = MDR_MOD_VPU_END
} modid_vpu;

typedef enum {
	MODID_WCN_SRART 		= MDR_MOD_WCN_START,
	MODID_WCN_WIFI_RESET 		= 0xc1000101,
	MODID_WCN_WIFI_FwNotifyL05 	= 0xc1000102,
	MODID_WCN_WIFI_FwNotifyTriggerL0 = 0xc1000103,
	MODID_WCN_WIFI_END 		= 0xc100018f,
	MODID_WCN_BT_RESET 		= 0xc1000191,
	MODID_WCN_BT_RESET_END 		= MDR_MOD_WCN_END,
	MODID_WCN_END 			= MDR_MOD_WCN_END,
} modid_wcn;

typedef enum {
	MODID_TEE_START                   = MDR_MOD_TEE_START,
	MODID_TEE_EXCEPTION               = 0x83000001,
	MODID_TEE_KERNEL_EXCEPTION        = 0x83000002,
	MODID_TEE_MR_EXCEPTION            = 0x83000003,
	MODID_TEE_SERROR_EXCEPTION        = 0x83000004,
	MODID_TEE_CORE_PROCESS_EXCEPTION  = 0x83000005,
	MODID_TEE_END                     = MDR_MOD_TEE_END
} modid_tee;

enum CORE_LIST {
	MDR_AP = 0x1,
	MDR_CP = 0x2,
	MDR_TEEOS = 0x4,
	MDR_AUDIO = 0x8,
	MDR_LPM3 = 0x10,
	MDR_SHUB = 0x20,
	MDR_ISP = 0x40,
	MDR_IVP = 0x80,
	MDR_UFS = 0x100,
	MDR_CLK = 0x200,
	MDR_MISEE = 0x4000,
	MDR_NPU = 0x8000,
	MDR_GPU = 0x10000,
	MDR_VDSP = 0x20000,
	MDR_XRSE = 0x40000,
	MDR_DPU = 0x80000,
	MDR_VENC = 0x100000,
	MDR_VDEC = 0x200000,
	MDR_WCN = 0x400000,
	MDR_CORE_MAX
};

typedef enum {
	CATEGORY_START = 0x0,
	NORMALBOOT,
	PANIC,
	HARDWARE_FAULT,
	SUBSYS_EXCEPTION,
	BOOTUP_FAILED,
	SUBTYPE = 0xff,
}CATEGORY_SOURCE;

#endif

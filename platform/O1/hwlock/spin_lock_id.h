// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Copyright (C) 2022-2025, X-Ring technologies Inc., All rights reserved.
 */
#ifndef __SPIN_LOCK_ID_H__
#define __SPIN_LOCK_ID_H__


#define LPIS_SPIN_LOCK 0
#define PERI_SPIN_LOCK 1
#define SPIN_LOCK_DOMAIN_MAX 2


#define SPIN_LOCK_MASTER_LPCTRL 1
#define SPIN_LOCK_MASTER_SENSORHUB 2
#define SPIN_LOCK_MASTER_ACPU_KERNEL 3
#define SPIN_LOCK_MASTER_ADSP 4
#define SPIN_LOCK_MASTER_ACPU_XHEE 0x10
#define SPIN_LOCK_MASTER_ACPU_ATF 0x11
#define SPIN_LOCK_MASTER_ACPU_XSPM 0x12
#define SPIN_LOCK_MASTER_ACPU_MITEE 0x13
#define SPIN_LOCK_MASTER_ACPU_XSP 0x14
#define SPIN_LOCK_MASTER_ACPU_UEFI 0x15
#define SPIN_LOCK_MASTER_XRSE 0x16
#define SPIN_LOCK_MASTER_XCTRLCPU 0x17
#define SPIN_LOCK_MASTER_MAX 0x18


#define PERI_LOCK_TOTAL_NUM      72
#define LPIS_LOCK_TOTAL_NUM      40


#define CALC_PERI_LOCK_ID(X, Y)  ((X) * 8 + (Y))
#define CALC_LPIS_LOCK_ID(X, Y)  ((X) * 8 + (Y) + PERI_LOCK_TOTAL_NUM)


#define PERI_SPIN_LOCK_ID_0_0    CALC_PERI_LOCK_ID(0, 0)
#define PERI_SPIN_LOCK_ID_0_1    CALC_PERI_LOCK_ID(0, 1)
#define PERI_SPIN_LOCK_ID_0_2    CALC_PERI_LOCK_ID(0, 2)
#define PERI_SPIN_LOCK_ID_0_3    CALC_PERI_LOCK_ID(0, 3)
#define PERI_SPIN_LOCK_ID_0_4    CALC_PERI_LOCK_ID(0, 4)
#define PERI_SPIN_LOCK_ID_1_0    CALC_PERI_LOCK_ID(1, 0)
#define PERI_SPIN_LOCK_ID_1_1    CALC_PERI_LOCK_ID(1, 1)
#define PERI_SPIN_LOCK_ID_1_2    CALC_PERI_LOCK_ID(1, 2)


#define PERI_SPIN_LOCK_MAX       PERI_LOCK_TOTAL_NUM


#define LPIS_SPIN_LOCK_ID_0_0    CALC_LPIS_LOCK_ID(0, 0)
#define LPIS_SPIN_LOCK_ID_0_1    CALC_LPIS_LOCK_ID(0, 1)
#define LPIS_SPIN_LOCK_ID_0_2    CALC_LPIS_LOCK_ID(0, 2)
#define LPIS_SPIN_LOCK_ID_0_3    CALC_LPIS_LOCK_ID(0, 3)
#define LPIS_SPIN_LOCK_ID_0_4    CALC_LPIS_LOCK_ID(0, 4)
#define LPIS_SPIN_LOCK_ID_1_0    CALC_LPIS_LOCK_ID(1, 0)
#define LPIS_SPIN_LOCK_ID_1_1    CALC_LPIS_LOCK_ID(1, 1)
#define LPIS_SPIN_LOCK_ID_1_2    CALC_LPIS_LOCK_ID(1, 2)
#define LPIS_SPIN_LOCK_ID_1_3    CALC_LPIS_LOCK_ID(1, 3)


#define LPIS_SPIN_LOCK_ID_4_7    CALC_LPIS_LOCK_ID(4, 7)
#define LPIS_SPIN_LOCK_MAX       PERI_LOCK_TOTAL_NUM + LPIS_LOCK_TOTAL_NUM


#define GROUP_NUM(X)			((X) >> 3)
#define BITS_OFFSET(X)			((X) & 0x7)


#define LOCK_REQ_ADDRESS(X)		(GROUP_NUM(X) * 0x0C)
#define LOCK_MID_H_ADDRESS		(0x04)
#define LOCK_MID_L_ADDRESS		(0x08)

#define XR_HWLOCKS_BASE_ID		0
#define SHIFT_32			32


#define LOCK_REQ_BIT(X)			(0x01 << (BITS_OFFSET(X) + 8))
#define LOCK_CLR_BIT(X)			(0x01 << (BITS_OFFSET(X) + 16))
#define MID_REQ_MASK(X)			(0xffULL << (BITS_OFFSET(X) * 8))
#define MID_REQ_BIT(mid, X)		((uint64_t)mid << (BITS_OFFSET(X) * 8))

#endif
